/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    products: Product;
    variants: Variant;
    sizes: Size;
    materials: Material;
    finishes: Finish;
    deities: Deity;
    categories: Category;
    colors: Color;
    origin: Origin;
    discounts: Discount;
    orders: Order;
    shippingInfo: ShippingInfo;
    paymentInfo: PaymentInfo;
    reviews: Review;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    products: ProductsSelect<false> | ProductsSelect<true>;
    variants: VariantsSelect<false> | VariantsSelect<true>;
    sizes: SizesSelect<false> | SizesSelect<true>;
    materials: MaterialsSelect<false> | MaterialsSelect<true>;
    finishes: FinishesSelect<false> | FinishesSelect<true>;
    deities: DeitiesSelect<false> | DeitiesSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    colors: ColorsSelect<false> | ColorsSelect<true>;
    origin: OriginSelect<false> | OriginSelect<true>;
    discounts: DiscountsSelect<false> | DiscountsSelect<true>;
    orders: OrdersSelect<false> | OrdersSelect<true>;
    shippingInfo: ShippingInfoSelect<false> | ShippingInfoSelect<true>;
    paymentInfo: PaymentInfoSelect<false> | PaymentInfoSelect<true>;
    reviews: ReviewsSelect<false> | ReviewsSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: {
      schedulePublish: TaskSchedulePublish;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  name: string;
  avatar?: (number | null) | Media;
  role?: ('admin' | 'customer')[] | null;
  wishList?: (number | Product)[] | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  _verified?: boolean | null;
  _verificationToken?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: number;
  title: string;
  /**
   * URL-friendly version of name
   */
  slug: string;
  description: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Brief description for listings
   */
  shortDescription?: string | null;
  images: {
    image: number | Media;
    alt: string;
    id?: string | null;
  }[];
  origin: number | Origin;
  deity: number | Deity;
  materials?: (number | Material)[] | null;
  finishes?: (number | Finish)[] | null;
  categories?: (number | Category)[] | null;
  variants?: (number | Variant)[] | null;
  ratingDistribution?:
    | {
        stars?: number | null;
        count?: number | null;
        id?: string | null;
      }[]
    | null;
  seo?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
    /**
     * Comma-separated keywords
     */
    keywords?: string | null;
  };
  status: 'draft' | 'published' | 'out-of-stock';
  /**
   * Show on homepage
   */
  featured?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "origin".
 */
export interface Origin {
  id: number;
  /**
   * Where the statue was made
   */
  name: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "deities".
 */
export interface Deity {
  id: number;
  name: string;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "materials".
 */
export interface Material {
  id: number;
  name: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "finishes".
 */
export interface Finish {
  id: number;
  name: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  title: string;
  description?: string | null;
  parent?: (number | null) | Category;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "variants".
 */
export interface Variant {
  id: number;
  product: number | Product;
  size: number | Size;
  height: number;
  width: number;
  depth: number;
  weight: number;
  color: number | Color;
  price: number;
  /**
   * Unique Stock Keeping Unit for this variant.
   */
  sku: string;
  trackInventory?: boolean | null;
  quantity: number;
  /**
   * Alert when stock falls below this
   */
  lowStockThreshold?: number | null;
  images?:
    | {
        image: number | Media;
        alt: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sizes".
 */
export interface Size {
  id: number;
  name: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "colors".
 */
export interface Color {
  id: number;
  name: string;
  color: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "discounts".
 */
export interface Discount {
  id: number;
  /**
   * A name for this discount for internal reference (e.g., "Diwali Sale 2025").
   */
  name: string;
  requiresCode?: boolean | null;
  /**
   * The code a customer will enter at checkout. Required if the box above is checked.
   */
  code?: string | null;
  type: 'percentage' | 'fixedAmount';
  percent?: number | null;
  amount?: number | null;
  appliesTo: 'order' | 'products' | 'categories';
  requiredProducts?: (number | Product)[] | null;
  requiredCategories?: (number | Category)[] | null;
  /**
   * The cart total must be at least this amount.
   */
  minimumCartValue?: number | null;
  startDate?: string | null;
  endDate?: string | null;
  /**
   * The total number of times this code can be used by anyone.
   */
  usageLimit?: number | null;
  usageCount?: number | null;
  /**
   * How many times a single logged-in user can use this code.
   */
  limitPerUser?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders".
 */
export interface Order {
  id: number;
  user: number | User;
  items: {
    product: number | Product;
    quantity: number;
    price: number;
    id?: string | null;
  }[];
  total: number;
  status?: ('pending' | 'paid' | 'shipped' | 'delivered' | 'cancelled') | null;
  stripeSessionId?: string | null;
  shippingInfo?: (number | null) | ShippingInfo;
  paymentInfo?: (number | null) | PaymentInfo;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "shippingInfo".
 */
export interface ShippingInfo {
  id: number;
  user: number | User;
  addressName?: string | null;
  addressLine1: string;
  addressLine2?: string | null;
  city: string;
  state: string;
  postalCode: string;
  country: string;
  isDefault?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "paymentInfo".
 */
export interface PaymentInfo {
  id: number;
  user: number | User;
  stripeCustomerId: string;
  stripePaymentMethodId: string;
  brand?: string | null;
  last4?: string | null;
  expMonth?: number | null;
  expYear?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reviews".
 */
export interface Review {
  id: number;
  user: number | User;
  product: number | Product;
  rating: number;
  title?: string | null;
  comment?: string | null;
  images?:
    | {
        image: number | Media;
        alt?: string | null;
        id?: string | null;
      }[]
    | null;
  helpfulCount?: number | null;
  notHelpfulCount?: number | null;
  /**
   * Only approved reviews are shown publicly
   */
  approved?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: number;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'schedulePublish';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'schedulePublish') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'products';
        value: number | Product;
      } | null)
    | ({
        relationTo: 'variants';
        value: number | Variant;
      } | null)
    | ({
        relationTo: 'sizes';
        value: number | Size;
      } | null)
    | ({
        relationTo: 'materials';
        value: number | Material;
      } | null)
    | ({
        relationTo: 'finishes';
        value: number | Finish;
      } | null)
    | ({
        relationTo: 'deities';
        value: number | Deity;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'colors';
        value: number | Color;
      } | null)
    | ({
        relationTo: 'origin';
        value: number | Origin;
      } | null)
    | ({
        relationTo: 'discounts';
        value: number | Discount;
      } | null)
    | ({
        relationTo: 'orders';
        value: number | Order;
      } | null)
    | ({
        relationTo: 'shippingInfo';
        value: number | ShippingInfo;
      } | null)
    | ({
        relationTo: 'paymentInfo';
        value: number | PaymentInfo;
      } | null)
    | ({
        relationTo: 'reviews';
        value: number | Review;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: number | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  avatar?: T;
  role?: T;
  wishList?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  _verified?: T;
  _verificationToken?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  description?: T;
  shortDescription?: T;
  images?:
    | T
    | {
        image?: T;
        alt?: T;
        id?: T;
      };
  origin?: T;
  deity?: T;
  materials?: T;
  finishes?: T;
  categories?: T;
  variants?: T;
  ratingDistribution?:
    | T
    | {
        stars?: T;
        count?: T;
        id?: T;
      };
  seo?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
        keywords?: T;
      };
  status?: T;
  featured?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "variants_select".
 */
export interface VariantsSelect<T extends boolean = true> {
  product?: T;
  size?: T;
  height?: T;
  width?: T;
  depth?: T;
  weight?: T;
  color?: T;
  price?: T;
  sku?: T;
  trackInventory?: T;
  quantity?: T;
  lowStockThreshold?: T;
  images?:
    | T
    | {
        image?: T;
        alt?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sizes_select".
 */
export interface SizesSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "materials_select".
 */
export interface MaterialsSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "finishes_select".
 */
export interface FinishesSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "deities_select".
 */
export interface DeitiesSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  parent?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "colors_select".
 */
export interface ColorsSelect<T extends boolean = true> {
  name?: T;
  color?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "origin_select".
 */
export interface OriginSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "discounts_select".
 */
export interface DiscountsSelect<T extends boolean = true> {
  name?: T;
  requiresCode?: T;
  code?: T;
  type?: T;
  percent?: T;
  amount?: T;
  appliesTo?: T;
  requiredProducts?: T;
  requiredCategories?: T;
  minimumCartValue?: T;
  startDate?: T;
  endDate?: T;
  usageLimit?: T;
  usageCount?: T;
  limitPerUser?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders_select".
 */
export interface OrdersSelect<T extends boolean = true> {
  user?: T;
  items?:
    | T
    | {
        product?: T;
        quantity?: T;
        price?: T;
        id?: T;
      };
  total?: T;
  status?: T;
  stripeSessionId?: T;
  shippingInfo?: T;
  paymentInfo?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "shippingInfo_select".
 */
export interface ShippingInfoSelect<T extends boolean = true> {
  user?: T;
  addressName?: T;
  addressLine1?: T;
  addressLine2?: T;
  city?: T;
  state?: T;
  postalCode?: T;
  country?: T;
  isDefault?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "paymentInfo_select".
 */
export interface PaymentInfoSelect<T extends boolean = true> {
  user?: T;
  stripeCustomerId?: T;
  stripePaymentMethodId?: T;
  brand?: T;
  last4?: T;
  expMonth?: T;
  expYear?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reviews_select".
 */
export interface ReviewsSelect<T extends boolean = true> {
  user?: T;
  product?: T;
  rating?: T;
  title?: T;
  comment?: T;
  images?:
    | T
    | {
        image?: T;
        alt?: T;
        id?: T;
      };
  helpfulCount?: T;
  notHelpfulCount?: T;
  approved?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskSchedulePublish".
 */
export interface TaskSchedulePublish {
  input: {
    type?: ('publish' | 'unpublish') | null;
    locale?: string | null;
    doc?: {
      relationTo: 'products';
      value: number | Product;
    } | null;
    global?: string | null;
    user?: (number | null) | User;
  };
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}